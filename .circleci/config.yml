version: 2.1
parameters:
  run_all_tests:
    type: boolean
    default: false
  run_pr_tests:
    type: boolean
    default: false
  run_file_tests:
    type: string
    default: ""  
  run_metamask_tests:
    type: boolean
    default: false
  run_flaky_tests:
    type: boolean
    default: false
  resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge"]
    default: "xlarge"
  web:
    type: boolean
    default: true
orbs:
  browser-tools: circleci/browser-tools@1.5.2
  node: circleci/node@7.0.0

jobs:

  build:
    docker:
      - image: cimg/node:20.0.0-browsers
    resource_class: << pipeline.parameters.resource_class >>
    working_directory: ~/remix-project
    steps:
      - run: sudo apt update && sudo apt install zstd
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Build
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              NX_BIN_URL=http://127.0.0.1:8080/assets/js/soljson NX_WASM_URL=http://127.0.0.1:8080/assets/js/soljson NX_NPM_URL=http://127.0.0.1:9090/ yarn build:production
            else
              NX_BIN_URL=http://127.0.0.1:8080/assets/js/soljson NX_WASM_URL=http://127.0.0.1:8080/assets/js/soljson NX_NPM_URL=http://127.0.0.1:9090/ yarn build
            fi
      - run: yarn run build:e2e
      
      - run: grep -ir "[0-9]+commit" apps/* libs/* --include \*.ts --include \*.tsx --include \*.json > soljson-versions.txt
      - restore_cache:
          keys:
            - soljson-v7-{{ checksum "soljson-versions.txt" }}
      - run: yarn run downloadsolc_assets_e2e
      - save_cache:
          key: soljson-v7-{{ checksum "soljson-versions.txt" }}
          paths:
            - dist/apps/remix-ide/assets/js/soljson

      - run: mkdir persist && tar -cf - dist | zstd -1 -o persist/dist.tar.zst
      - persist_to_workspace:
          root: .
          paths:
            - "persist"

  build-plugin:
      docker:
      - image: cimg/node:20.0.0-browsers
      resource_class: << pipeline.parameters.resource_class >>
      working_directory: ~/remix-project
      parameters:
        plugin:
          type: string
      steps:
        - checkout
        - restore_cache:
            keys:
              - v1-deps-{{ checksum "yarn.lock" }}
        - run: yarn
        - save_cache:
            key: v1-deps-{{ checksum "yarn.lock" }}
            paths:
              - node_modules
        - run: yarn nx build << parameters.plugin >> --configuration=production 
        - run: mkdir persist && zip -0 -r persist/plugin-<< parameters.plugin >>.zip dist
        - persist_to_workspace:
            root: .
            paths:
              - "persist"  
  lint:
    docker:
      - image: cimg/node:20.0.0-browsers
    resource_class: << pipeline.parameters.resource_class >>
    working_directory: ~/remix-project
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: yarn nx graph --file=./projects.json 
      - run:
          name: Remix Libs Linting
          command: node ./apps/remix-ide/ci/lint-targets.js
  remix-libs:
    docker:
      - image: cimg/node:20.0.0-browsers
    resource_class: << pipeline.parameters.resource_class >>
    working_directory: ~/remix-project
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn --version
      - run: yarn
      - run: yarn build:libs
      - run: cd dist/libs/remix-tests && yarn
      - run: cd dist/libs/remix-tests && yarn add @remix-project/remix-url-resolver ../../libs/remix-url-resolver
      - run: cd dist/libs/remix-tests && yarn add @remix-project/remix-lib ../../libs/remix-lib
      - run: cd dist/libs/remix-tests && yarn add @remix-project/remix-solidity ../../libs/remix-solidity
      - run: cd dist/libs/remix-tests && yarn add @remix-project/remix-simulator ../../libs/remix-simulator
      - run: cd dist/libs/remix-tests && ./bin/remix-tests ./../../../libs/remix-tests/tests/examples_0/assert_ok_test.sol
      - run: node dist/libs/remix-tests/bin/remix-tests ./libs/remix-tests/tests/examples_0/assert_ok_test.sol
      - run: yarn run test:libs


  check-flaky-or-pr-tests:
    docker:
      - image: cimg/node:24.3.0
    working_directory: ~/remix-project
    parameters:
      pattern:
        type: string
    steps:
      - checkout
      - run: node apps/remix-ide-e2e/src/buildGroupTests.js
      - run:
          name: Check for enabled tests matching tag
          command: |
            PATTERN="<< parameters.pattern >>"
            if [ -z "$PATTERN" ]; then
              echo "‚ùå Tag parameter is empty!"
              exit 2
            fi
            echo "üîç Searching for enabled tests with .$PATTERN extension..."
            if grep -IRiL "'@disabled': \?true" "./apps/remix-ide-e2e/src/tests" | grep "${PATTERN}"; then
              echo "‚úÖ Found enabled .$PATTERN tests."
              exit 0
            else
              echo "‚ö†Ô∏è No enabled .$PATTERN tests found. Skipping workflow."
              exit 1
            fi   

  remix-ide-browser:
    docker:
      - image: cimg/node:20.19.0-browsers
    resource_class: << pipeline.parameters.resource_class >>
    working_directory: ~/remix-project
    parameters:
      browser:
        type: string
      script:
        type: string
      scriptparameter:
        type: string
      job:
        type: string
      jobsize:
        type: string
      parallelism:
        type: integer
        default: 1
    parallelism: << parameters.parallelism >>
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: sudo apt update && sudo apt install python3-pip -y zstd
      - run: zstd -d persist/dist.tar.zst -o persist/dist.tar
      - run: tar -xf persist/dist.tar
      - run: yarn install --cwd ./apps/remix-ide-e2e --modules-folder ../../node_modules || yarn install --cwd ./apps/remix-ide-e2e --modules-folder ../../node_modules
      - run: mkdir node_modules/hardhat && wget https://unpkg.com/hardhat/console.sol -O node_modules/hardhat/console.sol
      - run: ls -la ./dist/apps/remix-ide/assets/js

      - when:
          condition:
              equal: [ "chrome", << parameters.browser >> ]
          steps:
            - browser-tools/install-browser-tools:
                install-firefox: false
                install-chrome: true
                install-chromedriver: false
                install-geckodriver: false
            - run: yarn install_webdriver
            - run: google-chrome --version
      - when:
          condition:
              equal: [ "chromeMetamask", << parameters.browser >> ]
          steps:
            - browser-tools/install-browser-tools:
                install-firefox: false
                install-chrome: true
                install-chromedriver: false
                install-geckodriver: false
            - run:
                name: "üì¶ Downgrading Chrome to version 135"
                command: |
                  echo "üì¶ Downgrading Chrome to version 135"
                  wget -q https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_135.0.7049.114-1_amd64.deb -O /tmp/chrome135.deb
                  sudo dpkg -i /tmp/chrome135.deb || true
                  sudo apt-get install -f -y
                  google-chrome --version
            - run: yarn install_webdriver
            - run: google-chrome --version
      - when:
          condition:
              equal: [ "firefox", << parameters.browser >> ]
          steps:
            - browser-tools/install-browser-tools:
                install-firefox: true
                install-chrome: false
                install-geckodriver: false
                install-chromedriver: false
            - run: yarn install_webdriver
            - run: firefox --version
      - run: ./apps/remix-ide/ci/<< parameters.script >> << parameters.browser >> << parameters.jobsize >> << parameters.job >> << parameters.scriptparameter >>
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots
      - store_artifacts:
          path: /home/circleci/remix-project/logs
          destination: logs

  tests-passed:
    machine:
      image: default
    steps:
      - run: echo done

  remix-test-plugins:
    docker:
      - image: cimg/node:20.17.0-browsers
    resource_class: << pipeline.parameters.resource_class >>
    working_directory: ~/remix-project
    parameters:
      plugin:
        type: string
      parallelism:
        type: integer
        default: 1
    parallelism: << parameters.parallelism >>
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: sudo apt update && sudo apt install zstd
      - run: zstd -d persist/dist.tar.zst -o persist/dist.tar
      - run: tar -xf persist/dist.tar
      - run: unzip ./persist/plugin-<< parameters.plugin >>.zip
      - run: yarn install --cwd ./apps/remix-ide-e2e --modules-folder ../../node_modules || yarn install --cwd ./apps/remix-ide-e2e --modules-folder ../../node_modules
      - browser-tools/install-browser-tools:
          install-firefox: false
          install-chrome: true
          install-geckodriver: false
          install-chromedriver: false
      - run: yarn install_webdriver
      - run: google-chrome --version
      - run: ./apps/remix-ide/ci/browser_test_plugin.sh << parameters.plugin >>
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots


  predeploy:
    docker:
      - image: cimg/node:20.0.0-browsers
    resource_class: << pipeline.parameters.resource_class >>
    working_directory: ~/remix-project
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: yarn build:production
      - run: mkdir persist && zip -0 -r persist/predeploy.zip dist
      - persist_to_workspace:
          root: .
          paths:
            - "persist"

  deploy-build:
    docker:
      - image: cimg/node:20.0.0-browsers

    resource_class:
      xlarge
    environment:
      COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project

    parameters:
      script:
        type: string

    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/predeploy.zip
      - run: ./apps/remix-ide/ci/deploy_from_travis_remix-<< parameters.script >>.sh
    
workflows:

  run_file_tests:
    when: << pipeline.parameters.run_file_tests >>
    jobs:
      - check-flaky-or-pr-tests:
          pattern: << pipeline.parameters.run_file_tests >>
      - build:
          requires:
            - check-flaky-or-pr-tests
      - remix-ide-browser:
          requires:
            - build
          matrix:
            parameters:
              browser: ["chrome"]
              script: ["singletest.sh"]
              job: ["nogroup"]
              jobsize: ["1"]
              parallelism: [1]
              scriptparameter: [<< pipeline.parameters.run_file_tests >>]

  run_pr_tests:
    when: << pipeline.parameters.run_pr_tests >>
    jobs:
      - check-flaky-or-pr-tests:
          pattern: "\\.pr"
      - build:
          requires:
            - check-flaky-or-pr-tests
      - remix-ide-browser:
          requires:
            - build
          matrix:
            parameters:
              browser: ["chrome"]
              script: ["singletest.sh"]
              job: ["nogroup"]
              jobsize: ["1"]
              parallelism: [1]
              scriptparameter: ["\\.pr"]

  run_flaky_tests:
    when: << pipeline.parameters.run_flaky_tests >>
    jobs:
      - check-flaky-or-pr-tests:
          pattern: "\\.flaky"
      - build:
          requires:
            - check-flaky-or-pr-tests
      - remix-ide-browser:
          requires:
            - build
          matrix:
            parameters:
              browser: ["chrome", "firefox"]
              script: ["singletest.sh"]
              job: ["nogroup"]
              jobsize: ["1"]
              parallelism: [5]
              scriptparameter: ["\\.flaky"]

  run_metamask_tests:
    when: << pipeline.parameters.run_metamask_tests >>
    jobs:
      - build
      - remix-ide-browser:
          requires:
            - build
          matrix:
            parameters:
              browser: ["chromeMetamask"]
              script: ["metamask.sh"]
              job: ["0"]
              jobsize: ["1"]
              parallelism: [1]
  web:
    when: << pipeline.parameters.run_all_tests >>
    jobs:
      - build
      - build-plugin:
          matrix:
            parameters:
              plugin: ["plugin_api"]
      - lint:
          requires:
            - build
      - remix-libs
      - remix-test-plugins:
          name: test-plugin-<< matrix.plugin >>
          requires:
            - build
            - build-plugin
          matrix:
            alias: plugins
            parameters:
              plugin: ["plugin_api"]
              parallelism: [1, 9]
            exclude: 
              - plugin: plugin_api
                parallelism: 1

      - remix-ide-browser:
          requires:
            - build
          matrix:
            alias: browser-tests
            parameters:
              browser: ["chrome", "firefox"]
              script: ["browser_test.sh"]
              job: ["0","1","2","3","4","5","6","7","8","9"]
              jobsize: ["10"]
              parallelism: [15]
              scriptparameter: [""]
      - remix-ide-browser:
          requires:
            - build
          matrix:
            alias: metamask
            parameters:
              browser: ["chromeMetamask"]
              script: ["metamask.sh"]
              job: ["0"]
              jobsize: ["10"]
              parallelism: [1]
              scriptparameter: [""]
          filters:
            branches:
              only: [/.*metamask.*/, 'master', 'remix_live', 'remix_beta']
      - tests-passed:
          requires:
            - lint
            - remix-libs
            - browser-tests
            - metamask
            - plugins
            
      - predeploy:
          filters:
            branches:
              only: ['master', 'remix_live', 'remix_beta']
      - deploy-build:
          script: "live"
          name: "deploy-live"
          requires:
            - lint
            - remix-libs
            - browser-tests
            - metamask
            - plugins
            - predeploy
          filters:
            branches:
              only: remix_live
      - deploy-build:
          script: "alpha"
          name: "deploy-alpha"
          requires:
            - lint
            - remix-libs
            - browser-tests
            - metamask
            - plugins
            - predeploy
          filters:
            branches:
              only: master
      - deploy-build:
          script: "beta"
          name: "deploy-beta"
          requires:
            - lint
            - remix-libs
            - browser-tests
            - metamask
            - plugins
            - predeploy
          filters:
            branches:
              only: remix_beta

# VS Code Extension Version: 1.5.1
